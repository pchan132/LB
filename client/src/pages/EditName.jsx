import axios from "axios";
import { useState, useEffect } from "react";
import TableName from "../components/TableName";

export default function EditName(userData) {
  const [tableData, setTableData] = useState([]); //‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const [formData, setFormData] = useState({
    firstName: "",
    lastName: "",
    department: "",
  });

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Database
  const fetchData = async () => {
    try {
      const response = await axios.get("http://localhost:3000/getName");
      setTableData(response.data);
      console.log("‚úÖ get Data success");
    } catch (err) {
      console.error("‚ùå Error fetch data:", err);
    }
  };

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠ Component ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
  useEffect(() => {
    fetchData();
  }, []);

  const submit = async (newData) => {
    const response = await axios.post(
      "http://localhost:3000/createName",
      newData
    );
    console.log(response.data);
    fetchData();
  };

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    });
  };

  // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  const deleteData = async (id) => {
    try {
      const response = await axios.delete(
        `http://localhost:3000/deleteName/${id}`
      );
      console.log("‚úÖ delete success");
      fetchData(); // üîÑ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
    } catch (err) {
      console.error("Error Delete data:", err);
    }
  };

  const departments = [
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏ä‡πà‡∏≤‡∏á‡∏¢‡∏ô‡∏ï‡πå",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏ä‡πà‡∏≤‡∏á‡∏Å‡∏•‡πÇ‡∏£‡∏á‡∏á‡∏≤‡∏ô",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏ä‡πà‡∏≤‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏•‡∏´‡∏∞",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏ä‡πà‡∏≤‡∏á‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏ä‡πà‡∏≤‡∏á‡∏≠‡∏¥‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏£‡∏≠‡∏ô‡∏¥‡∏Å‡∏™‡πå",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏ä‡πà‡∏≤‡∏á‡∏Å‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏õ‡∏±‡∏ï‡∏¢‡∏Å‡∏£‡∏£‡∏°",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏≤‡∏£",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏Ñ‡∏´‡∏Å‡∏£‡∏£‡∏°‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏™‡∏≤‡∏°‡∏±‡∏ç‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå (‡∏û‡∏•‡∏≤‡∏ô‡∏≤‡∏°‡∏±‡∏¢)",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏®‡∏¥‡∏•‡∏õ‡∏Å‡∏£‡∏£‡∏°",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏•‡∏à‡∏¥‡∏™‡∏ï‡∏¥‡∏Å‡∏™‡πå",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏™‡∏≤‡∏£‡∏™‡∏ô‡πÄ‡∏ó‡∏®",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏ß‡∏¥‡∏à‡∏¥‡∏ï‡∏£‡∏®‡∏¥‡∏•‡∏õ‡πå",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ô‡∏¥‡πÄ‡∏ó‡∏®‡∏®‡∏¥‡∏•‡∏õ‡πå",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏™‡∏≤‡∏°‡∏±‡∏ç‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏™‡∏≤‡∏°‡∏±‡∏ç‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå (‡∏™‡∏±‡∏á‡∏Ñ‡∏°)",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏™‡∏≤‡∏°‡∏±‡∏ç‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå (‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏™‡∏≤‡∏°‡∏±‡∏ç‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå (‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå)",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏™‡∏≤‡∏°‡∏±‡∏ç‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå (‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå)",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏Å‡∏£‡∏≤‡∏ü‡∏¥‡∏Å",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏´‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡πÅ‡∏°‡∏Ñ‡∏Ñ‡∏≤‡∏ó‡∏£‡∏≠‡∏ô‡∏¥‡∏Å‡∏™‡πå",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏ä‡πà‡∏≤‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏ö‡∏≥‡∏£‡∏∏‡∏á",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏¢‡∏≤‡∏ô‡∏¢‡∏ô‡∏ï‡πå‡πÑ‡∏ü‡∏ü‡πâ‡∏≤",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°",
    "‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏•",
  ];

  const handleSubmit = async (e) => {
    e.preventDefault();
    await submit(formData);
    setFormData({
      firstName: "",
      lastName: "",
      department: "",
    });
  };
  const openModal = (mode, data) => {
    setUserData(data);
    console.log(data);
    setModalMode(mode); // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á Modal ('add' ‡∏´‡∏£‡∏∑‡∏≠ 'edit')
    setIsOpen(true); // ‡πÄ‡∏õ‡∏¥‡∏î Modal
  };

  return (
    <div className="flex items-center justify-center mb-3 mt-15 mr-10">
      <div>
        <form className="fieldset flex">
          <input
            type="text"
            className="input"
            placeholder="‡∏ä‡∏∑‡πà‡∏≠"
            name="firstName"
            value={formData.firstName}
            onChange={handleChange}
          />
          <input
            type="text"
            className="input"
            placeholder="‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•"
            name="lastName"
            value={formData.lastName}
            onChange={handleChange}
          />
          <select
            name="department"
            id="department"
            className="select"
            value={formData.department}
            onChange={handleChange}
          >
            <option value="" disabled={true}>
              ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ú‡∏ô‡∏Å
            </option>
            {departments.map((user, index) => (
              <option key={index} value={user}>
                {user}
              </option>
            ))}
          </select>
          <button
            className="btn btn-primary"
            type="submit"
            onClick={handleSubmit}
          >
            ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠
          </button>
        </form>
        <TableName tableDataName={tableData}/>
      </div>
    </div>
  );
}
